{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/LoaderView/LoaderView.module.css","components/Container/Container.module.css","components/Button/Button.js","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/ImagesErrorView/ImagesErrorView.js","components/LoaderView/LoaderView.js","services/apiPixabay.js","components/ImagesInfo/ImagesInfo.js","components/Container/Container.js","components/Searchbar/Searchbar.js","components/App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Button","onLoadMore","type","className","s","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","console","log","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","src","alt","createPortal","Overlay","Component","ImageGalleryItem","largeImageURL","useState","showModal","setshowModal","toggleModal","ImageGalleryItem_image","ImageGallery","images","map","image","index","webformatURL","tags","ImagesErrorView","message","role","LoaderView","loader","color","height","width","timeout","api","fetchPixabay","name","page","fetch","then","response","ok","json","Promise","reject","Error","Status","ImagesInfo","imageName","setImages","setPage","error","setError","status","setStatus","arePicturesOver","setArePicturesOver","useEffect","pixabayAPI","newImages","total","prevImages","hits","totalHits","scrollTo","top","documentElement","scrollHeight","behavior","catch","prevPage","Container","children","container","Searchbar","onSubmit","setImageName","SearchForm","e","preventDefault","trim","toast","info","SearchFormBtn","value","onChange","toLowerCase","SearchForm_input","autoComplete","autoFocus","placeholder","App","autoClose","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0a662e34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1i7Oe\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__3DtT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2U17u\",\"Modal\":\"Modal_Modal__3CC_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__189ay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2vVu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"LoaderView_loader__1-9Me\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3NbwN\"};","import PropTypes from 'prop-types';\nimport s from 'components/Button/Button.module.css';\n\nfunction Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from 'components/Modal/Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    console.log('Modal componentDidmount');\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    console.log('Modal componentWillUnmount');\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      console.log('Нажали ESC, нужно закрыть модалку');\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from 'components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css';\nimport Modal from 'components/Modal';\n\nfunction ImageGalleryItem({ src, alt, largeImageURL }) {\n  const [showModal, setshowModal] = useState(false);\n\n  const toggleModal = () => setshowModal(!showModal);\n\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={src}\n        alt={alt}\n        className={s.ImageGalleryItem_image}\n        onClick={toggleModal}\n      />\n      {showModal && (\n        <Modal onClose={toggleModal} src={largeImageURL} alt={alt} />\n      )}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from 'components/ImageGallery/ImageGalleryItem/ImageGalleryItem';\nimport s from 'components/ImageGallery/ImageGallery.module.css';\n\nfunction ImageGallery({ images }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map((image, index) => (\n        <ImageGalleryItem\n          key={index}\n          src={image.webformatURL}\n          alt={image.tags}\n          largeImageURL={image.largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nfunction ImagesErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Sorry, something went wrong. Error: {message}</p>\n    </div>\n  );\n}\n\nImagesErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ImagesErrorView;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from 'components/LoaderView/LoaderView.module.css';\n\nfunction LoaderView() {\n  //other logic\n  return (\n    <Loader\n      className={s.loader}\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n      timeout={3000} //3 secs\n    />\n  );\n}\n\nexport default LoaderView;\n","function fetchPixabay(name, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=19223838-0e771d4957721b26290d866a0&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`No response from server`));\n  });\n}\n\nconst api = { fetchPixabay };\n\nexport default api;\n","import React, { useState, useEffect } from 'react';\nimport Button from 'components/Button';\nimport ImageGallery from 'components/ImageGallery';\nimport ImagesErrorView from 'components/ImagesErrorView';\nimport LoaderView from 'components/LoaderView';\nimport PropTypes from 'prop-types';\n\nimport pixabayAPI from '../../services/apiPixabay';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction ImagesInfo({ imageName, images, page, setImages, setPage }) {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  // const [images, setImages] = useState([]);\n  // const [page, setPage] = useState(1);\n  const [arePicturesOver, setArePicturesOver] = useState(false);\n  // const [totalHits, setTotalHits] = ueState(0);\n\n  useEffect(() => {\n    if (!imageName) {\n      console.log('Такого имени нет');\n      return;\n    }\n    setStatus(Status.PENDING);\n\n    pixabayAPI\n      .fetchPixabay(imageName, page)\n      .then(newImages => {\n        if (newImages.total !== 0) {\n          setImages(prevImages => [...prevImages, ...newImages.hits]);\n          setArePicturesOver(newImages.totalHits - page * 12 <= 0);\n          setStatus(Status.RESOLVED);\n        } else return Promise.reject(new Error('Invalid request'));\n        return window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [imageName, page, setImages]);\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  if (status === Status.IDLE) {\n    return <p>Please enter a value for search images</p>;\n  }\n\n  if (status === Status.REJECTED) {\n    return <ImagesErrorView message={error.message} />;\n  }\n\n  if (status === Status.RESOLVED || status === Status.PENDING) {\n    return (\n      <>\n        <ImageGallery images={images} />\n\n        {status === Status.RESOLVED && !arePicturesOver && (\n          <Button onLoadMore={onLoadMore} />\n        )}\n        {status === Status.PENDING && <LoaderView />}\n      </>\n    );\n  }\n}\n\nImagesInfo.propTypes = {\n  imageName: PropTypes.string.isRequired,\n  images: PropTypes.array.isRequired,\n  page: PropTypes.number.isRequired,\n  setImages: PropTypes.func.isRequired,\n  setPage: PropTypes.func.isRequired,\n};\n\nexport default ImagesInfo;\n","import propTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport { GrSearch } from 'react-icons/gr';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = event => {\n    setImageName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handelFormSubmit = e => {\n    e.preventDefault();\n\n    if (imageName.trim() === '') {\n      return toast.info('Please enter search query');\n    }\n\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handelFormSubmit}>\n        <button type=\"submit\" className={s.SearchFormBtn}>\n          <GrSearch />\n          {/* <span className={s.SearchForm_button_label}>Search</span> */}\n        </button>\n\n        <input\n          value={imageName}\n          onChange={handleNameChange}\n          className={s.SearchForm_input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport ImagesInfo from 'components/ImagesInfo';\nimport Container from 'components/Container';\nimport Searchbar from './Searchbar';\n\nfunction App() {\n  const [imageName, setImageName] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const handelFormSubmit = name => {\n    setImageName(name);\n    setImages([]);\n    setPage(1);\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={handelFormSubmit} />\n      <ImagesInfo\n        imageName={imageName}\n        images={images}\n        page={page}\n        setImages={setImages}\n        setPage={setPage}\n      />\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from 'components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3HSev\",\"SearchForm\":\"Searchbar_SearchForm__2U1PY\",\"SearchFormBtn\":\"Searchbar_SearchFormBtn__68WiE\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__MTz1p\",\"SearchForm_input\":\"Searchbar_SearchForm_input__2zZE4\"};"],"sourceRoot":""}